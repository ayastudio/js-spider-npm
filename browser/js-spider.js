/**
 * JS-SPIDER.COM
 *
 * JavaScript error monitoring agent.
 *
 * See Docs at https://js-spider.com/docs/
 *
 * See License at https://js-spider.com/terms/
 *
 * @COPYRIGHT (c) 2021 ALL RIGHTS RESERVED
 *
 * @author Aya Studio Team <info@ayast.ru>
 *
 */

const JsSpider=function(a,b){'use strict';return new function(){this.configs={projectId:null,projectKey:null,screenshot:!0,clicksTrail:!0,deltaWait:800,context:()=>null},this.urls={log:atob("aHR0cHM6Ly9qcy1zcGlkZXIuY29tL2FwaS9lcnJvci9sb2c="),shot:atob("aHR0cHM6Ly9qcy1zcGlkZXIuY29tL2FwaS9lcnJvci9zY3JlZW5zaG90")},this.htmlToCanvasScript="https://html2canvas.hertzen.com/dist/html2canvas.js",this.imageQuality=.7,this.accumulator={},this.screenshots={},this.currentErrNumber=0,this.lastCall=0,this.timeout=null,this.sendErrorTimer=null,this.screenshotFreq=1,this.lastScreenshot={time:0,guid:""},this.deltaWait=this.configs.deltaWait,this.errorDeltaSend=5e3,this.elementClicksStory=[],this.init=b=>"object"==typeof b&&b.projectId?void(this.configs=Object.assign({projectId:null,projectKey:null,screenshot:!0,clicksTrail:!0,deltaWait:800,context:()=>null},b),this.configs.clicksTrail&&this.addClicksListener(),a.onerror=(a,b,c,d,e)=>{b.includes("js-spider.js")||this.logError(a,b,c,d,e)}):(console.warn("JS-SPIDER: Provided incorrect config:",b),console.warn("JS-SPIDER: See docs here: https://js-spider.com/docs"),!1),this.now=()=>new Date().getTime()/1e3,this.guid=()=>"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,a=>{let b=0|16*Math.random(),c="x"===a?b:8|3&b;return c.toString(16)}),this.send=(a,b,c)=>{let d=new XMLHttpRequest;d.open("POST",a),d.onload=()=>{try{c(JSON.parse(d.responseText))}catch(a){}},d.onerror=()=>{clearTimeout(this.sendErrorTimer),this.sendErrorTimer=setTimeout(()=>{this.sendError()},this.errorDeltaSend)},d.send(encodeURIComponent(JSON.stringify(b)))},this.loadScript=a=>{const c=b.createElement("script");return c.crossOrigin="anonymous",c.src=a,new Promise(a=>{c.onload=a,b.body.appendChild(c)})},this.logError=(c,d,e,f,g,h="global")=>{g=g&&"object"==typeof g?g.toString():g,this.accumulate({msg:c,url:d,line:e,col:f,errorStack:g,unix:this.now(),origin:b.domain,referer:a.location.href,type:h,resolution:screen.width+"x"+screen.height,screenshotGuid:""}),this.sendError()},this.catchError=a=>{this.logError(a.name,b.location.href,a.line,0,a.stack,"try-catch")},this.accumulate=a=>{if(this.accumulator.errors||(this.accumulator.errors={}),this.configs.screenshot){const b=this.getScreenshotGuid();a.screenshotGuid=b.guid,!0===b.makeNew&&this.makeScreenshot(b.guid)}let b=Object.keys(this.accumulator.errors).length;a.errNumber=this.currentErrNumber,this.accumulator.errors[b]=a,this.currentErrNumber++},this.sendError=()=>{clearTimeout(this.timeout),this.timeout=setTimeout(()=>{let a=this.accumulator.errors,b=Object.keys(a);if(b.length){if(this.lastCall+this.deltaWait/1e3>=this.now())return setTimeout(()=>this.sendError(),this.deltaWait);this.lastCall=this.now();let c={projectId:this.configs.projectId,projectKey:this.configs.projectKey,errors:a,context:this.configs.context()};this.send(this.urls.log,c,c=>{200===c.code&&b.forEach(b=>{const c=a[b];if(this.configs.screenshot){let a=c.screenshotGuid;this.screenshots[a]&&(this.sendScreenshot(this.screenshots[a]),delete this.screenshots[a])}delete this.accumulator.errors[b]})})}},this.deltaWait)},this.sendTestError=()=>{this.logError("Test error from dev console","https://js-spider.com/js-spider.js",0,0,"Test error from dev console","global")},this.getScreenshotGuid=()=>{let a=!1;return this.now()-this.lastScreenshot.time>this.screenshotFreq&&(this.lastScreenshot.time=this.now(),this.lastScreenshot.guid=this.guid(),a=!0),{guid:this.lastScreenshot.guid,makeNew:a}},this.makeScreenshot=async c=>{"undefined"==typeof a.html2canvas&&(await this.loadScript(this.htmlToCanvasScript));try{html2canvas(b.body,{logging:!1}).then(b=>{try{let d=b.toDataURL("image/png",this.imageQuality);this.screenshots[c]={guid:c,base64:d,clicks:this.configs.clicksTrail?this.elementClicksStory:null,time:this.now(),pixelRatio:a.devicePixelRatio||1};let e=!1;for(const a in this.accumulator.errors)if(this.accumulator.errors[a].screenshotGuid===c){e=!0;break}e||this.sendScreenshot({guid:c,base64:d})}catch(a){}})}catch(a){}},this.sendScreenshot=({guid:a,base64:b})=>{let c={projectId:this.configs.projectId,projectKey:this.configs.projectKey,context:this.configs.context(),data:{guid:a,base64:b}};this.send(this.urls.shot,c,()=>{})},this.addClicksListener=()=>{b.addEventListener("click",a=>this.clickHandler(a))},this.clickHandler=a=>{let b=a.target,c="<"+(b.tagName||"").toLowerCase();"string"==typeof b.className&&(c+=" class=\""+b.className.replace("\"","")+"\""),"string"==typeof b.id&&(c+=" id=\""+b.id.replace("\"","")+"\""),c+=">";let d=[];for(;b&&9!==b.nodeType;){let a=(b.tagName||"").toLowerCase();b.id&&(a+="#"+b.id),b.className&&"string"==typeof b.className&&(a+="."+b.className.split(" ").join(".")),"INPUT"===b.tagName&&(a+=`[type='${b.type}']`),d.unshift(a),b=b.parentNode}this.elementClicksStory.push({x:a.pageX,y:a.pageY,html:c,path:d.join(" "),time:new Date().toISOString()}),10<this.elementClicksStory.length&&this.elementClicksStory.shift()}}}(window,document);export default JsSpider;
